To adapt from previous work
-> Set of instructions to RISC-V done
-> Switch to 32 bits done

To do RTL Model
1st week :
-> Logic gates : AND, NOT, OR, XOR, ... done
-> Shifters done
-> Multiplexer done
-> Adder done
-> Registers, flip-flop done

2nd week :
-> ALU done
-> register file done 
-> FSM and ID done
-> tests done

Following :
-> Datapath done
-> Full controler done
-> Connect everything : memory + controler + Datapath done
-> tests (fill memory and see behavior of CPU)

What's missing ? 
-> PC controler in order to use branch instruction with conditions : 
    might need adaptation in FSM, need to use compare block to enable or not 
    the output of PC done 
-> Address register done
-> memory interface done
-> Increment PC block done
-> Instruction register done

Remarks 
-> might need a multiplexer controled by calc_on_PC and cmd_calc coming from fsm in datapath
    to see which one is the data_in
    if calc_on_PC : data_in = PC
    if cmd_cal : data_in = imm 
    they are put in register during fetch and then the operation is performed during execution **done in controler
-> PC_controler needs two regsiters out from resgister_file as input to do the checks on it 
    and the opcode done


--- Test Part ---

** Controler **
-> FSM done
-> ID done
-> FSM + ID done
-> PC controler done
-> Memory interface
-> address_controler done
-> datapath_input_controler done
-> increment_PC done
-> instruction_controler done
-> Full controler

** Datapath **
-> adder done
-> shifter done
-> logic unit done 
-> ALU done
-> flip-flop done
-> Registers done
-> register_file done
-> datapath

** Memory **
-> Memory

** CPU **
-> full system